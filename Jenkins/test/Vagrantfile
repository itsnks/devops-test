# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  
    config.vm.box = "debian/bullseye64"
  
     config.vm.network "private_network", ip: "192.168.54.2"
    # config.vm.network "public_network"
    # config.vm.synced_folder "../data", "/vagrant_data"
    # config.vm.synced_folder ".", "/vagrant", disabled: true
     config.vm.provider "virtualbox" do |vb|
    #   vb.gui = true
       vb.memory = "2048"
       vb.cpus = 2
     end
     
    config.vm.provision "shell", inline: <<-SHELL
        for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg -y
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
        sudo apt install default-jre -y
        mkdir /var/jenkins
        chmod 777 /var/jenkins
        mkdir -p /opt/docker/data
        chmod 777 /opt/docker/data
        #docker run --name jenkins-instance -p 8080:8080 -p 50000:50000 --restart=on-failure -v /opt/docker/data:/var/jenkins_home jenkins/jenkins:lts-jdk17
     SHELL
  end
  
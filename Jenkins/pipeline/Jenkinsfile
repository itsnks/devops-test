pipeline{
    agent {
        label 'builtinnode'
    }
    stages{
        stage('Build Application'){
            steps{
                sh 'mvn -f Jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post{
                success{
                    echo "Archiving the WAR file......"
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
        stage ('Create Tomcat Img'){
            agent {
                label 'testnode'
            }
            steps{
                copyArtifacts filter: "**/*.war", fingerprintArtifacts: true, projectName: env.JOB_NAME, selector: specific(env.BUILD_NUMBER)
                echo "Building docker image....."
                sh'''
                original_path=$(pwd -P)
                cd /opt/docker/app
                sudo docker build -t localtomcatimg:$BUILD_NUMBER .
                cd $original_path
                '''
            }
        }
        stage ('Deploy to staging'){
            agent {
                label 'testnode'
            }
            steps{
                echo "Running the created image....."
                sh'''
                sudo docker stop tomcatInstanceStaging || true
                sudo docker rm tomcatInstanceStaging || true
                sudo docker run -itd --name tomcatInstanceStaging -p 8082:8080 localtomcatimg:$BUILD_NUMBER
                '''
            }
        }
    }
}